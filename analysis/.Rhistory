broom::tidy() %>%
filter(estimate > 0) %>%
mutate(
estimate = pmin(1,plyr::round_any(estimate, threshold/max(n.risk)), na.rm=TRUE),
conf.low = pmin(1, plyr::round_any(conf.low, threshold/max(n.risk)), na.rm=TRUE),
conf.high = pmin(1, plyr::round_any(conf.high, threshold/max(n.risk)), na.rm=TRUE),
cum.in = 1 - estimate,
lci = 1- conf.high,
uci = 1 - conf.low
) %>%
mutate(care_home = gsub(".*=","", strata),
care_home = factor(care_home, levels = c("0","1")))
surv_data_risk_table <- ggsurvplot(survfit(Surv(follow_up_time, covid_vax) ~ care_home,
data = data_cox), risk.table = TRUE)$data.survtable %>%
select(care_home, time, n.risk) %>%
mutate(`n.risk` = ifelse(`n.risk` < 8, "<8", `n.risk`),
care_home = factor(care_home, levels = c("0","1")))
survfit(Surv(follow_up_time, covid_vax) ~ care_home,
data = data_cox) %>%
broom::tidy() %>%
filter(estimate > 0)
u
surv_data_groups <- survfit(Surv(follow_up_time, covid_vax) ~ care_home,
data = data_cox) %>%
broom::tidy() %>%
filter(estimate > 0)
surv_data_groups1 <- survfit(Surv(follow_up_time, covid_vax) ~ care_home,
data = data_cox) %>%
broom::tidy() %>%
filter(estimate > 0) %>%
mutate(
estimate = pmin(1,plyr::round_any(estimate, threshold/max(n.risk)), na.rm=TRUE),
conf.low = pmin(1, plyr::round_any(conf.low, threshold/max(n.risk)), na.rm=TRUE),
conf.high = pmin(1, plyr::round_any(conf.high, threshold/max(n.risk)), na.rm=TRUE),
cum.in = 1 - estimate,
lci = 1- conf.high,
uci = 1 - conf.low
)
View(surv_data_groups)
View(surv_data_groups1)
View(surv_data_groups)
View(surv_data_groups1)
View(surv_data_groups1)
max(n.risk)
?round_any
surv_data_groups1$n.risk
max(surv_data_groups1$n.risk)
7/6965
surv_data_rounded$strata
surv_data_rounded <- survfit(Surv(follow_up_time, covid_vax) ~ care_home,
data = data_cox) %>%
broom::tidy() %>%
filter(estimate > 0) %>%
mutate(
estimate = pmin(1,plyr::round_any(estimate, threshold/max(n.risk)), na.rm=TRUE),
conf.low = pmin(1, plyr::round_any(conf.low, threshold/max(n.risk)), na.rm=TRUE),
conf.high = pmin(1, plyr::round_any(conf.high, threshold/max(n.risk)), na.rm=TRUE),
cum.in = 1 - estimate,
lci = 1- conf.high,
uci = 1 - conf.low
)
surv_data_rounded$strata
surv_data_rounded <- survfit(Surv(follow_up_time, covid_vax) ~ care_home,
data = data_cox) %>%
broom::tidy() %>%
filter(estimate > 0) %>%
mutate(
estimate = pmin(1,plyr::round_any(estimate, threshold/max(n.risk)), na.rm=TRUE),
conf.low = pmin(1, plyr::round_any(conf.low, threshold/max(n.risk)), na.rm=TRUE),
conf.high = pmin(1, plyr::round_any(conf.high, threshold/max(n.risk)), na.rm=TRUE),
cum.in = 1 - estimate,
lci = 1- conf.high,
uci = 1 - conf.low
) %>%
mutate(care_home = gsub(".*=","", strata))
surv_data_rounded
surv_data_rounded$strata
surv_data_rounded <- survfit(Surv(follow_up_time, covid_vax) ~ care_home,
data = data_cox) %>%
broom::tidy() %>%
filter(estimate > 0) %>%
mutate(
estimate = pmin(1,plyr::round_any(estimate, threshold/max(n.risk)), na.rm=TRUE),
conf.low = pmin(1, plyr::round_any(conf.low, threshold/max(n.risk)), na.rm=TRUE),
conf.high = pmin(1, plyr::round_any(conf.high, threshold/max(n.risk)), na.rm=TRUE),
cum.in = 1 - estimate,
lci = 1- conf.high,
uci = 1 - conf.low
)
surv_data_risk_table <- ggsurvplot(
survfit(Surv(follow_up_time, covid_vax) ~ care_home, data = data_cox), risk.table = TRUE)$data.survtable %>%
select(care_home, time, n.risk) %>%
mutate(`n.risk` = ifelse(`n.risk` < 8, "<8", `n.risk`))
surv_data_risk_table
ggsurvplot(surv_data_rounded, data = data_cox,
censor.shape="|", censor.size = 4)
ggsurvplot(surv_data_rounded, data = data_cox,
censor.shape="|", censor.size = 4,
break.time.by = 30,
palette =
c("#E7B800", "#2E9FDF"),
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
legend.labs =
c("Care home = 0", "Care home = 1"),
risk.table.height = 0.25,
ggtheme = theme_bw()
)
ggsurvplot(surv_data_rounded)
surv_plot <- surv_data_rounded %>%
ggplot(aes(x = time, y = cum.in, colour = group))
surv_plot
surv_data_rounded %>%
ggplot(aes(x = time, y = cum.in, colour = care_home)) +  geom_step(size = 0.5
)
surv_data_rounded
surv_data_rounded %>%
ggplot(aes(x = time, y = cum.in, colour = strata)) +  geom_step(size = 0.5)
surv_data_rounded %>%
ggplot(aes(x = time, y = cum.in, colour = strata)) + geom_step(size = 0.5) +
scale_x_continuous(breaks = seq(0, max(surv_data_groups$time),50))
surv_data_rounded %>%
ggplot(aes(x = time, y = cum.in, colour = strata)) + geom_step(size = 0.5) +
scale_x_continuous(breaks = seq(0, max(surv_data_groups$time),50)) +
scale_y_continuous(expand = expansion(mult=c(0,0.01)))
surv_data_rounded %>%
ggplot(aes(x = time, y = 1-cum.in, colour = strata)) + geom_step(size = 0.5) +
scale_x_continuous(breaks = seq(0, max(surv_data_groups$time),50)) +
scale_y_continuous(expand = expansion(mult=c(0,0.01)))
surv_data_rounded
surv_data_rounded %>%
ggplot(aes(x = time, y = 1-cum.in, colour = strata)) + geom_step(size = 0.5) +
scale_x_continuous(breaks = seq(0, max(surv_data_groups$time),50)) +
scale_y_continuous(expand = expansion(mult=c(0,0.01))) +labs(
x = "Days since index date",
y = "1 - cumulative incidence of primary series completion",
colour = "Care home status",
title = "")
surv_data_rounded %>%
ggplot(aes(x = time, y = 1-cum.in, colour = strata)) + geom_step(size = 0.5) +
scale_x_continuous(breaks = seq(0, max(surv_data_groups$time),50)) +
scale_y_continuous(expand = expansion(mult=c(0,0.01))) +labs(
x = "Days since index date",
y = "1 - cumulative incidence",
colour = "Care home status",
title = "") +
theme_minimal(base_size = 9) +
ggsurvplot(surv_data_rounded, data = data_cox,
censor.shape="|", censor.size = 4,
break.time.by = 30,
palette =
c("#E7B800", "#2E9FDF"),
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
legend.labs =
c("Care home = 0", "Care home = 1"),
risk.table.height = 0.25,
ggtheme = theme_bw()
)
surv_data_rounded %>%
ggplot(aes(x = time, y = 1-cum.in, colour = strata)) + geom_step(size = 0.5) +
scale_x_continuous(breaks = seq(0, max(surv_data_groups$time),50)) +
scale_y_continuous(expand = expansion(mult=c(0,0.01))) +labs(
x = "Days since index date",
y = "1 - cumulative incidence",
colour = "Care home status",
title = "") +
theme_minimal(base_size = 9)
surv_data_rounded %>%
ggplot(aes(x = time, y = 1-cum.in, colour = strata)) + geom_step(size = 0.5) +
scale_x_continuous(breaks = seq(0, max(surv_data_groups$time),50)) +
scale_y_continuous(expand = expansion(mult=c(0,0.01))) +labs(
x = "Days since index date",
y = "1 - cumulative incidence",
colour = "Care home status",
title = "") +
theme_minimal(base_size = 12)
ggplot(surv_data_risk_table, aes(time, group)) +
geom_text(aes(label = n.risk), size = 2) +
theme_bw()
ggplot(surv_data_risk_table, aes(time, care_home)) +
geom_text(aes(label = n.risk), size = 2) +
theme_bw()
ggplot(surv_data_risk_table, aes(time, care_home)) +
geom_text(aes(label = n.risk), size = 2) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill= "white", size = 1),
axis.text.x = element_text(color = "black", size = 6),
axis.text.y = element_text(color = c("#00BFC4", "#7CAE00"), size = 4),
axis.title = element_text(color = "black", size = 8),
strip.text = element_text(color = "black", size = 3)) +
scale_y_discrete(limits = c("0", "1")) +
xlab("") +
ylab("Care home") +
ggtitle("Number at Risk")
g1 = surv_data_rounded %>%
ggplot(aes(x = time, y = 1-cum.in, colour = strata)) + geom_step(size = 0.5) +
scale_x_continuous(breaks = seq(0, max(surv_data_groups$time),50)) +
scale_y_continuous(expand = expansion(mult=c(0,0.01))) +labs(
x = "Days since index date",
y = "1 - cumulative incidence",
colour = "Care home status",
title = "") +
theme_minimal(base_size = 12)
g2 = ggplot(surv_data_risk_table, aes(time, care_home)) +
geom_text(aes(label = n.risk), size = 2) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill= "white", size = 1),
axis.text.x = element_text(color = "black", size = 6),
axis.text.y = element_text(color = c("#00BFC4", "#7CAE00"), size = 4),
axis.title = element_text(color = "black", size = 8),
strip.text = element_text(color = "black", size = 3)) +
scale_y_discrete(limits = c("0", "1")) +
xlab("") +
ylab("Care home") +
ggtitle("Number at Risk")
gridExtra::arrangeGrob(g1, g2, ncol=1,heights = c(4, 1))
plot_grid(g1, g2, ncol=1,heights = c(4, 1))
library('cowplot')
plot_grid(g1, g2, ncol=1,heights = c(4, 1))
plot_grid(g1, g2, ncol=1,align="v")
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"))
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"), rel_heights=c(3,1))
g2 = ggplot(surv_data_risk_table, aes(time, care_home)) +
geom_text(aes(label = n.risk), size = 2) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill= "white", size = 1),
axis.text.x = element_text(color = "black", size = 6),
axis.text.y = element_text(color = c("#00BFC4", "#7CAE00"), size = 4),
axis.title = element_text(color = "black", size = 8),
strip.text = element_text(color = "black", size = 3)) +
scale_y_discrete(limits = c("0", "1")) +
xlab("") +
ylab("Care home") +
ggtitle("Number at Risk")
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"), rel_heights=c(3,1))
g2 = ggplot(surv_data_risk_table, aes(time, care_home)) +
geom_text(aes(label = n.risk), size = 2) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill= "white", size = 1),
axis.text.x = element_text(color = "white", size = 6),
axis.text.y = element_text(color = c("#00BFC4", "#7CAE00"), size = 4),
axis.title = element_text(color = "black", size = 8),
strip.text = element_text(color = "black", size = 3)) +
scale_y_discrete(limits = c("0", "1")) +
xlab("") +
ylab("Care home") +
ggtitle("Number at Risk")
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"), rel_heights=c(3,1))
g2 = ggplot(surv_data_risk_table, aes(time, care_home)) +
geom_text(aes(label = n.risk), size = 2) +
theme_minimal(base_size = 12) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill= "white", size = 1),
axis.text.x = element_text(color = "white", size = 6),
axis.text.y = element_text(color = c("#00BFC4", "#7CAE00"), size = 4),
axis.title = element_text(color = "black", size = 8),
strip.text = element_text(color = "black", size = 3)) +
scale_y_discrete(limits = c("0", "1")) +
xlab("") +
ylab("Care home") +
ggtitle("Number at Risk")
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"), rel_heights=c(3,1))
g2 = ggplot(surv_data_risk_table, aes(time, care_home)) +
geom_text(aes(label = n.risk), size = 4) +
theme_minimal(base_size = 12) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill= "white", size = 1),
axis.text.x = element_text(color = "white", size = 6),
axis.text.y = element_text(color = c("#00BFC4", "#7CAE00"), size = 4),
axis.title = element_text(color = "black", size = 8),
strip.text = element_text(color = "black", size = 3)) +
scale_y_discrete(limits = c("0", "1")) +
xlab("") +
ylab("Care home") +
ggtitle("Number at Risk")
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"), rel_heights=c(3,1))
g2 = ggplot(surv_data_risk_table, aes(time, care_home)) +
geom_text(aes(label = n.risk), size = 4) +
theme_minimal(base_size = 12) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill= "white", size = 1),
axis.text.x = element_text(color = "white", size = 6),
axis.text.y = element_text(color = c("#00BFC4", "#7CAE00")),
axis.title = element_text(color = "black", size = 8),
strip.text = element_text(color = "black", size = 3)) +
scale_y_discrete(limits = c("0", "1")) +
xlab("") +
ylab("Care home") +
ggtitle("Number at Risk")
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"), rel_heights=c(3,1))
g2 = ggplot(surv_data_risk_table, aes(time, care_home)) +
geom_text(aes(label = n.risk), size = 4) +
theme_minimal(base_size = 12) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill= "white", size = 1),
axis.text.x = element_text(color = "white"),
axis.title = element_text(color = "black"),
strip.text = element_text(color = "black")) +
scale_y_discrete(limits = c("0", "1")) +
xlab("") +
ylab("Care home") +
ggtitle("Number at Risk")
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"), rel_heights=c(3,1))
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"), rel_heights=c(3,1.5))
ggsurvplot(surv_data_rounded, data = data_cox,
censor.shape="|", censor.size = 4,
break.time.by = 30,
palette =
c("#E7B800", "#2E9FDF"),
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
legend.labs =
c("Care home = 0", "Care home = 1"),
risk.table.height = 0.25,
ggtheme = theme_bw()
)
threshold=10
fit <- survfit(Surv(follow_up_time, covid_vax) ~ care_home, data = data_cox)
ggsurvplot(fit, data = data_cox,
censor.shape="|", censor.size = 4,
break.time.by = 30,
palette =
c("#E7B800", "#2E9FDF"),
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
legend.labs =
c("Care home = 0", "Care home = 1"),
risk.table.height = 0.25,
ggtheme = theme_bw()
)
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"), rel_heights=c(3,1.5))
ggsurvplot(fit, data = data_cox,
censor.shape="|", censor.size = 4,
break.time.by = 50,
palette =
c("#E7B800", "#2E9FDF"),
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
legend.labs =
c("Care home = 0", "Care home = 1"),
risk.table.height = 0.25,
ggtheme = theme_bw()
)
surv_data_rounded <- survfit(Surv(follow_up_time, covid_vax) ~ imd,
data = data_cox) %>%
broom::tidy() %>%
filter(estimate > 0) %>%
mutate(
estimate = pmin(1,plyr::round_any(estimate, threshold/max(n.risk)), na.rm=TRUE),
conf.low = pmin(1, plyr::round_any(conf.low, threshold/max(n.risk)), na.rm=TRUE),
conf.high = pmin(1, plyr::round_any(conf.high, threshold/max(n.risk)), na.rm=TRUE),
cum.in = 1 - estimate,
lci = 1- conf.high,
uci = 1 - conf.low
)
surv_data_risk_table <- ggsurvplot(
survfit(Surv(follow_up_time, covid_vax) ~ imd, data = data_cox), risk.table = TRUE)$data.survtable %>%
select(imd, time, n.risk) %>%
mutate(`n.risk` = ifelse(`n.risk` < 8, "<8", `n.risk`))
g1 = surv_data_rounded %>%
ggplot(aes(x = time, y = 1-cum.in, colour = strata)) + geom_step(size = 0.5) +
scale_x_continuous(breaks = seq(0, max(surv_data_groups$time),50)) +
scale_y_continuous(expand = expansion(mult=c(0,0.01))) +
labs(
x = "Days since index date",
y = "1 - cumulative incidence",
colour = "Care home status",
title = "") +
theme_minimal(base_size = 12)
g2 = ggplot(surv_data_risk_table, aes(time, imd)) +
geom_text(aes(label = n.risk), size = 4) +
theme_minimal(base_size = 12) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill= "white", size = 1),
axis.text.x = element_text(color = "white"),
axis.title = element_text(color = "black"),
strip.text = element_text(color = "black")) +
scale_y_discrete(limits = c("0", "1")) +
xlab("") +
ylab("Care home") +
ggtitle("Number at Risk")
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"), rel_heights=c(3,1.5))
g2 = ggplot(surv_data_risk_table, aes(time, imd)) +
geom_text(aes(label = n.risk), size = 4) +
theme_minimal(base_size = 12) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill= "white", size = 1),
axis.text.x = element_text(color = "white"),
axis.title = element_text(color = "black"),
strip.text = element_text(color = "black")) +
xlab("") +
ylab("IMD") +
ggtitle("Number at Risk")
plot_grid(g1, g2, ncol=1,align="v", axis = c("lr"), rel_heights=c(3,1.5))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
## Import libraries
library('here')
library('readr')
library('tidyr')
library('tidyverse')
library('lubridate')
library('survival')
library('gtsummary')
library('gt')
library('survminer')
library('glue')
library('fs')
library('cowplot')
## Import custom user functions
source(here::here("analysis", "functions.R"))
## Import data
data_cox <- read_rds(here::here("output", "data", "data_cox.rds"))
### Preliminaries ----
## Import libraries
library('here')
library('readr')
library('tidyr')
library('tidyverse')
library('lubridate')
library('survival')
library('gtsummary')
library('gt')
library('survminer')
library('glue')
library('fs')
## Import data
data_cohort <- read_rds(here::here("output", "data", "data_cohort.rds"))
## Import custom user functions and packages
source(here::here("analysis", "functions.R"))
## Amend data to cox ph format
data_cox <- data_cohort %>%
mutate(
# Start date
start_date = as.Date("2020-12-08", format = "%Y-%m-%d"),
# End date
end_date = as.Date("2021-07-01", format = "%Y-%m-%d"),
# Censoring
censor_date = pmin(death_date,
dereg_date,
as.Date("2021-07-01", format = "%Y-%m-%d"),
na.rm=TRUE),
# Follow-up time
follow_up_time = tte(start_date, vax2_date, censor_date),
# COVID vaccination: 1 of vaccinated before end date, 0 otherwise
covid_vax = as.integer(ifelse(is.na(vax2_date) | vax2_date>end_date, 0, 1)),
)
## Create output directory
dir.create(here::here("output", "model"), showWarnings = FALSE, recursive=TRUE)
## Set variable list
var_list <- c("ageband2", "sex", "ethnicity", "imd", "chronic_kidney_disease_diagnostic",
"dialysis", "kidney_transplant", "chronic_kidney_disease_stages_3_5", "prior_covid_cat",
"care_home", "shielded", "immunosuppression", "chronic_resp_dis", "diabetes", "cld",
"chd", "asplenia", "cancer", "obesity", "chronic_neuro_dis_inc_sig_learn_dis", "sev_mental_ill")
## Pick out variables, recode list as factors, and pikc complete cases
data_cox <- data_cox %>% select(all_of(var_list), follow_up_time, covid_vax, region)
data_cox[,var_list] <- lapply(data_cox[,var_list], factor)
data_cox <- data_cox[complete.cases(data_cox),]
data_cox$death_date
## Import libraries ----
library('tidyverse')
library('lubridate')
library('here')
library('glue')
## Import custom user functions
source(here::here("analysis", "functions.R"))
## Create output directory
fs::dir_create(here::here("output", "tables"))
## Import processed data ----
data_processed <- read_rds(here::here("output", "data", "data_processed.rds"))
data_processed
data_processed$death_date
## Import libraries ----
library('tidyverse')
library('lubridate')
library('here')
library('glue')
## Import custom user functions
source(here::here("analysis", "functions.R"))
## Create output directory
fs::dir_create(here::here("output", "tables"))
## Import processed data ----
data_processed <- read_rds(here::here("output", "data", "data_processed.rds"))
data_processed$death_date
data_processed$dereg_date
censor_date = pmin(as.Date("2021-07-01", format = "%Y-%m-%d"),
na.rm=TRUE)
censor_date
