cols_hide(columns = "var_group") %>%
tab_options(table.font.size = pct(95)) %>%
tab_style(
style = list(
cell_borders(
sides = c("right"), color = "#cccccc"
)
),
locations = list(
cells_body(
columns = c("p", "n (events)")
)
)
) %>%
tab_options(row_group.font.weight="bold", column_labels.font.weigh="bold") %>%
tab_footnote(
footnote = "All counts rounded to nearest 5; data redacted for any rows with rounded values of ≤10 for n (total),
n (events), or n (non-events), where n (non-events) is the difference between n (total) and n (events) after rounding.",
locations = cells_column_labels(columns = "n (events)")
)
## Import logistic regression results
tbl_reduced <- read_rds(here::here("output", "model", "mod_strat_logistic_redacted.rds")) %>%
select(var_group, var_label, label, n_obs, n_event,
estimate_uni, conf.low_uni, conf.high_uni, p.value_uni,
estimate, conf.low, conf.high, p.value)
## Relabel columns
names(tbl_reduced) = c("var_group", "group", "level", "n (total)", "n (events)",
"OR", "lower CI", "upper CI", "p",
"OR (adj)", "lower CI (adj)", "upper CI (adj)", "p (adj)")
## Create formatted gt output
tbl_reduced %>%
gt(rowname_col = "level", groupname_col = "group") %>%
tab_spanner(
label = "univariate",
columns = c("OR", "lower CI", "upper CI", "p")
) %>%
tab_spanner(
label = "multivariate",
columns = c("OR (adj)", "lower CI (adj)", "upper CI (adj)", "p (adj)")
)  %>%
cols_hide(columns = "var_group") %>%
tab_options(table.font.size = pct(95)) %>%
tab_style(
style = list(
cell_borders(
sides = c("right"), color = "#cccccc"
)
),
locations = list(
cells_body(
columns = c("p", "n (events)")
)
)
) %>%
tab_options(row_group.font.weight="bold", column_labels.font.weigh="bold") %>%
tab_footnote(
footnote = "All counts rounded to nearest 5; data redacted for any rows with rounded values of ≤10 for n (total),
n (events), or n (non-events), where n (non-events) is the difference between n (total) and n (events) after rounding.",
locations = cells_column_labels(columns = "n (events)")
)
## Remove redacted components from plot
tbl_reduced$`OR (adj)`[tbl_reduced$`OR (adj)`=="[Redacted]"] = NA
tbl_reduced$`lower CI (adj)`[tbl_reduced$`OR (adj)`=="[Redacted]"] = NA
tbl_reduced$`upper CI (adj)`[tbl_reduced$`OR (adj)`=="[Redacted]"] = NA
## Recode ORs and CIs as numerics
tbl_reduced$`OR (adj)` = as.numeric(tbl_reduced$`OR (adj)`)
tbl_reduced$`lower CI (adj)` = as.numeric(tbl_reduced$`lower CI (adj)`)
tbl_reduced$`upper CI (adj)` = as.numeric(tbl_reduced$`upper CI (adj)`)
## Set plot min
plot_min = 0.5
if(min(tbl_reduced$`lower CI (adj)`, na.rm=T) < plot_min) { plot_min = min(tbl_reduced$`lower CI (adj)`, na.rm=T) }
## Set plot max
plot_max = 2
if(max(tbl_reduced$`upper CI (adj)`, na.rm=T) > plot_max) { plot_max = max(tbl_reduced$`upper CI (adj)`, na.rm=T) }
## Add redaction text variable
tbl_reduced$redaction = NA
tbl_reduced$redaction[tbl_reduced$`n (total)`=="[Redacted]"] = "[R]"
## Generate plot
ggplot(tbl_reduced, aes(y = `OR (adj)`, x = level, colour = var_group)) +
geom_point(size = 2, alpha=0.8) +
geom_text(aes(y = plot_min+0.02, label = redaction)) +
geom_errorbar(aes(ymin=as.numeric(`lower CI (adj)`), ymax=as.numeric(`upper CI (adj)`), colour = var_group), width=0) +
coord_flip() + facet_grid(group~., scales = "free", space = "free") +
theme_bw() + theme(strip.background = element_blank()) + labs(colour = "Group") +
geom_hline(yintercept=1, linetype="dotted") +
ylab("Odds ratio") + xlab("") +
scale_colour_manual(values = c("#3B9AB2", "#E1AF00", "#B40F20")) +
scale_y_continuous(trans="log",limits=c(plot_min, plot_max), breaks=c(0.5,1,2)) +
theme(axis.title = element_text(size=12), axis.text = element_text(size=12), strip.text = element_text(size=12),
legend.title = element_text(size = 12), legend.text = element_text(size = 12))
print(sessionInfo())
## Import libraries
library('here')
library('readr')
library('tidyr')
library('tidyverse')
library('lubridate')
library('survival')
library('gtsummary')
library('gt')
library('survminer')
library('glue')
library('fs')
## Import data
data_cohort <- read_rds(here::here("output", "data", "data_cohort.rds"))
data_cohort$death_date
## Import custom user functions and packages
source(here::here("analysis", "functions.R"))
## Amend data to cox ph format
data_cox <- data_cohort %>%
mutate(
# Start date
start_date = as.Date("2020-12-08", format = "%Y-%m-%d"),
# End date
end_date = as.Date("2021-07-01", format = "%Y-%m-%d"),
# Censoring
censor_date = pmin(death_date,
dereg_date,
as.Date("2021-07-01", format = "%Y-%m-%d"),
na.rm=TRUE),
# Follow-up time
follow_up_time = tte(start_date, vax2_date, censor_date),
# COVID vaccination: 1 of vaccinated before end date, 0 otherwise
covid_vax = as.integer(ifelse(is.na(vax2_date) | vax2_date>end_date, 0, 1)),
)
?pmin
View(data_cohort)
## Import libraries
library('here')
library('readr')
library('tidyr')
library('tidyverse')
library('lubridate')
library('survival')
library('gtsummary')
library('gt')
library('survminer')
library('glue')
library('fs')
## Import data
data_cohort <- read_rds(here::here("output", "data", "data_cohort.rds"))
## Import custom user functions and packages
source(here::here("analysis", "functions.R"))
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home + strata(region)"), data = data_cox)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
## Import libraries
library('here')
library('readr')
library('tidyr')
library('tidyverse')
library('lubridate')
library('survival')
library('gtsummary')
library('gt')
library('survminer')
library('glue')
library('fs')
## Import custom user functions
source(here::here("analysis", "functions.R"))
## Import data
data_cox <- read_rds(here::here("output", "data", "data_cox.rds"))
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home + strata(region)"), data = data_cox)
uni_model
summary(res.cox)
summary(uni_model)
ggsurvplot(survfit(uni_model), color = "#2E9FDF", ggtheme = theme_minimal())
survfit(uni_model)
survfit(uni_model)
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home"), data = data_cox)
summary(uni_model)
ggsurvplot(survfit(uni_model), color = "#2E9FDF", ggtheme = theme_minimal())
class(uni_model)
test.ph <- cox.zph(res.cox)
test.ph <- cox.zph(uni_model)
test.ph
ggcoxzph(test.ph)
survplot(uni_model, levels.only=TRUE, time.inc=12,
type="kaplan-meier",
xlab="Study Survival Time in Months")
plot(survfit(uni_model), ylab="Probability of Survival",
xlab="Months in Study", col=c("red", "black", "black"))
plot(test.ph)
?survplot
??survplot
library('rms')
install.packages("rms")
library('rms')
survplot(uni_model, levels.only=TRUE, time.inc=12,
type="kaplan-meier",
xlab="Study Survival Time in Months")
survplot(uni_model, care_home = data_cox$care_home, levels.only=TRUE, time.inc=12,
type="kaplan-meier",
xlab="Study Survival Time in Months")
survplot(uni_model, care_home = data_cox$care_home, levels.only=TRUE, conf.int=.95,
time.inc=12,
type="kaplan-meier",
xlab="Study Survival Time in Months")
uni_model = cph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home + strata(region)"), data = data_cox)
coxph
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home + strata(region)"), data = data_cox)
summary(uni_model)
ggsurvplot(survfit(res.cox), color = "#2E9FDF",ggtheme = theme_minimal())
uni_model = cph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home"), data = data_cox)
summary(uni_model)
uni_model = cph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home"), data = data_cox)
uni_model
survplot(uni_model, care_home = data_cox$care_home, levels.only=TRUE, conf.int=.95,
time.inc=12,
type="kaplan-meier",
xlab="Study Survival Time in Months")
plot(survfit(uni_model), ylab="Probability of Survival",
xlab="Months in Study", col=c("red", "black", "black"))
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home + strata(region)"), data = data_cox)
summary(uni_model)
ggsurvplot(survfit(res.cox), color = "#2E9FDF",ggtheme = theme_minimal())
ggsurvplot(survfit(uni_model), color = "#2E9FDF",ggtheme = theme_minimal())
ggsurvplot(survfit(uni_model))
newdat <- with(data_cox, data.frame(care_home = c(1, 0)))
newdat
plot(survfit(uni_model, newdata = newdat), xscale = 12,
conf.int = TRUE,
col = c("red", "blue"),
xlab = "Years after initial hemorrhage",
ylab = "Proportion without recurrent hemorrhage",
main = "Plotting the genotype effects from the cfit Model")
legend(0.5, 0.2,
legend=c(
expression(paste("Homozygous ", epsilon, "3 / ",
epsilon, "3")),
expression(paste("At least one ", epsilon,"2 or ",
epsilon,"4 Allele"))
),
lty = 1,
col = c("red", "blue"),
text.col = c("red", "blue"))
ggsurvplot(survfit(uni_model), data= data_cox)
ggsurvplot(survfit(uni_model), data=data_cox, censor.shape="|", censor.size = 4)
?survfit
survfit(uni_model)
uni_model
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home"), data = data_cox)
summary(uni_model)
newdat <- with(data_cox, data.frame(care_home = c(1, 0)))
ggsurvplot(survfit(uni_model), data=data_cox, censor.shape="|", censor.size = 4)
table(data_cox$care_home)
summary(uni_model)
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home+1"), data = data_cox)
summary(uni_model)
newdat <- with(data_cox, data.frame(care_home = c(1, 0)))
ggsurvplot(survfit(uni_model), data=data_cox, censor.shape="|", censor.size = 4)
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ factor(care_home)"), data = data_cox)
summary(uni_model)
ggsurvplot(survfit(uni_model), data=data_cox, censor.shape="|", censor.size = 4)
ggsurvplot(
survfit(uni_model),
data = data_cox,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs =
c("Male", "Female"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
data_cox$care_home
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ factor(sex)"), data = data_cox)
summary(uni_model)
ggsurvplot( data=, censor.shape="|", censor.size = 4)
data_cox$sex
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ factor(sex)"), data = data_cox)
summary(uni_model)
ggsurvplot( data=, censor.shape="|", censor.size = 4)
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ factor(sex)"), data = data_cox)
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ factor(sex)"), data = data_cox)
summary(uni_model)
ggsurvplot( data=, censor.shape="|", censor.size = 4)
ggsurvplot(survfit(uni_model), data=data_cox, censor.shape="|", censor.size = 4)
?ggsurvplot
ggsurvplot(survfit(uni_model), data=data_cox, color = sex, censor.shape="|", censor.size = 4)
ggsurvplot(survfit(uni_model), data=data_cox, color = aes(sex), censor.shape="|", censor.size = 4)
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ factor(care_home)"), data = data_cox)
summary(uni_model)
newdat <- with(data_cox, data.frame(care_home = c(1, 0)))
ggsurvplot(survfit(uni_model), newdata = newdat, data=data_cox, color = aes(sex), censor.shape="|", censor.size = 4)
ggsurvplot(survfit(uni_model), newdata = newdat, data=data_cox, censor.shape="|", censor.size = 4)
newdat
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home"), data = data_cox)
data_cox$care_home
newdat <- with(data_cox, data.frame(care_home = c(0,1)))
ggsurvplot(survfit(uni_model), newdata = newdat, data=data_cox, censor.shape="|", censor.size = 4)
ggsurvplot(survfit(uni_model), conf.int = TRUE, legend.labs=c("Care home"),
ggtheme = theme_minimal(), risk.table = TRUE)
ggsurvplot(survfit(uni_model), newdata = newdat, conf.int = TRUE, legend.labs=c("Care home"),
ggtheme = theme_minimal(), risk.table = TRUE)
ggsurvplot(survfit(uni_model), ata=data_cox, conf.int = TRUE, legend.labs=c("Care home"),
ggtheme = theme_minimal(), risk.table = TRUE)
fit <- survfit(uni_model, newdata = newdat)
ggsurvplot(fit, conf.int = TRUE, legend.labs=c("Care home"),
ggtheme = theme_minimal(), risk.table = TRUE)
fit
## Import data
data_cox <- read_rds(here::here("output", "data", "data_cox.rds"))
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home"), data = data_cox)
summary(uni_model)
newdat <- with(data_cox, data.frame(care_home = c(0,1)))
newdat <- with(data_cox,
data.frame(care_home = c(0,1)
)
)
newdat
fit <- survfit(uni_model, newdata = newdat)
ggsurvplot(fit, ggtheme = theme_minimal(), risk.table = TRUE)
class(fit)
ggsurvplot(data=fit, ggtheme = theme_minimal(), risk.table = TRUE)
ggsurvplot(fit, ggtheme = theme_minimal(), risk.table = TRUE)
ggsurvplot(fit, data=fit, ggtheme = theme_minimal(), risk.table = TRUE)
ggsurvplot(fit=fit, data=fit, ggtheme = theme_minimal(), risk.table = TRUE)
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home + strata(region)"), data = data_cox)
summary(uni_model)
newdat <- with(data_cox,
data.frame(care_home = c(0,1)
)
)
fit <- survfit(uni_model, newdata = newdat)
ggsurvplot(fit=fit, data=fit, ggtheme = theme_minimal(), risk.table = TRUE)
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home"), data = data_cox)
summary(uni_model)
newdat <- with(data_cox,
data.frame(care_home = c(0,1)
)
)
fit <- survfit(uni_model, newdata = newdat)
uni_model = coxph(as.formula("Surv(follow_up_time, covid_vax) ~ care_home"), data = data_cox)
summary(uni_model)
newdat <- with(data_cox,
data.frame(care_home = c(0,1)
)
)
fit <- survfit(uni_model, newdata = newdat)
ggsurvplot(fit=fit, data=fit, ggtheme = theme_minimal(), risk.table = TRUE)
ggsurvplot(fit=fit, data=fit,
censor.shape="|", censor.size = 4,
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs =
c("0", "1"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
ggsurvplot(fit=fit, data=uni_model,
censor.shape="|", censor.size = 4,
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs =
c("0", "1"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
fit <- survfit(Surv(follow_up_time, covid_vax) ~ care_home, data = data_cox)
ggsurvplot(fit, data = data_cox)
ggsurvplot(fit, data = data_cox,
censor.shape="|", censor.size = 4,
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs =
c("0", "1"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
## Import libraries
library('here')
library('readr')
library('tidyr')
library('tidyverse')
library('lubridate')
library('survival')
library('gtsummary')
library('gt')
library('survminer')
library('glue')
library('fs')
## Import custom user functions
source(here::here("analysis", "functions.R"))
## Import data
data_cox <- read_rds(here::here("output", "data", "data_cox.rds"))
uni_model = coxph("Surv(follow_up_time, covid_vax) ~ care_home", data = data_cox)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
## Import libraries
library('here')
library('readr')
library('tidyr')
library('tidyverse')
library('lubridate')
library('survival')
library('gtsummary')
library('gt')
library('survminer')
library('glue')
library('fs')
## Import custom user functions
source(here::here("analysis", "functions.R"))
## Import data
data_cox <- read_rds(here::here("output", "data", "data_cox.rds"))
# fit univariate model
uni_model = coxph("Surv(follow_up_time, covid_vax) ~ care_home", data = data_cox)
# fit univariate model
uni_model = coxph(Surv(follow_up_time, covid_vax) ~ care_home, data = data_cox)
summary(uni_model)
fit <- survfit(Surv(follow_up_time, covid_vax) ~ care_home, data = data_cox)
ggsurvplot(fit, data = data_cox,
censor.shape="|", censor.size = 4,
palette =
c("#E7B800", "#2E9FDF"),
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
legend.labs =
c("Care home = 0", "Care home = 1"),
risk.table.height = 0.25,
ggtheme = theme_bw()
)
test.ph <- cox.zph(uni_model)
test.ph
ggcoxzph(test.ph)
# fit univariate model
uni_model = coxph(Surv(follow_up_time, covid_vax) ~ imd, data = data_cox)
summary(uni_model)
fit <- survfit(Surv(follow_up_time, covid_vax) ~ imd, data = data_cox)
ggsurvplot(fit, data = data_cox,
censor.shape="|", censor.size = 4,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
risk.table.height = 0.25,
ggtheme = theme_bw()
)
ggsurvplot(fit, data = data_cox,
censor.shape="|", censor.size = 4,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
risk.table.height = 1,
ggtheme = theme_bw()
)
ggsurvplot(fit, data = data_cox,
censor.shape="|", censor.size = 4,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
risk.table.height = 0.4,
ggtheme = theme_bw()
)
test.ph <- cox.zph(uni_model)
test.ph
ggcoxzph(test.ph)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
## Import libraries
library('here')
library('readr')
library('tidyr')
library('tidyverse')
library('lubridate')
library('survival')
library('gtsummary')
library('gt')
library('survminer')
library('glue')
library('fs')
## Import custom user functions
source(here::here("analysis", "functions.R"))
## Import data
data_cox <- read_rds(here::here("output", "data", "data_cox.rds"))
# fit univariate model
uni_model = coxph(Surv(follow_up_time, covid_vax) ~ care_home, data = data_cox)
summary(uni_model)
fit <- survfit(Surv(follow_up_time, covid_vax) ~ care_home, data = data_cox)
ggsurvplot(fit, data = data_cox,
censor.shape="|", censor.size = 4,
palette =
c("#E7B800", "#2E9FDF"),
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
legend.labs =
c("Care home = 0", "Care home = 1"),
risk.table.height = 0.25,
ggtheme = theme_bw()
)
test.ph <- cox.zph(uni_model)
test.ph
